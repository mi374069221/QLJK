<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qm.mapper.AllDataMapper" >
  <resultMap id="BaseResultMap" type="com.qm.pojo.AllData" >
    <result column="nodeIp" property="nodeip" jdbcType="VARCHAR" />
    <result column="dataTime" property="datatime" jdbcType="TIMESTAMP" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="weather" property="weather" jdbcType="VARCHAR" />
    <result column="windDirection" property="winddirection" jdbcType="INTEGER" />
    <result column="windSpeed" property="windspeed" jdbcType="VARCHAR" />
    <result column="temperature" property="temperature" jdbcType="VARCHAR" />
    <result column="waterLevel" property="waterlevel" jdbcType="VARCHAR" />
    <result column="gravity" property="gravity" jdbcType="VARCHAR" />
    <result column="frequency" property="frequency" jdbcType="VARCHAR" />
    <result column="subsidenceDegree" property="subsidencedegree" jdbcType="VARCHAR" />
    <result column="displacementDegree" property="displacementdegree" jdbcType="VARCHAR" />
    <result column="tiltDegree" property="tiltdegree" jdbcType="VARCHAR" />
    <result column="affectResult" property="affectresult" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    nodeIp, dataTime, status, weather, windDirection, windSpeed, temperature, waterLevel, 
    gravity, frequency, subsidenceDegree, displacementDegree, tiltDegree, affectResult
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.qm.pojo.AllDataExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from all_data
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.qm.pojo.AllDataExample" >
    delete from all_data
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.qm.pojo.AllData" >
    insert into all_data (nodeIp, dataTime, status, 
      weather, windDirection, windSpeed, 
      temperature, waterLevel, gravity, 
      frequency, subsidenceDegree, displacementDegree, 
      tiltDegree, affectResult)
    values (#{nodeip,jdbcType=VARCHAR}, #{datatime,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER}, 
      #{weather,jdbcType=VARCHAR}, #{winddirection,jdbcType=INTEGER}, #{windspeed,jdbcType=VARCHAR}, 
      #{temperature,jdbcType=VARCHAR}, #{waterlevel,jdbcType=VARCHAR}, #{gravity,jdbcType=VARCHAR}, 
      #{frequency,jdbcType=VARCHAR}, #{subsidencedegree,jdbcType=VARCHAR}, #{displacementdegree,jdbcType=VARCHAR}, 
      #{tiltdegree,jdbcType=VARCHAR}, #{affectresult,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.qm.pojo.AllData" >
    insert into all_data
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="nodeip != null" >
        nodeIp,
      </if>
      <if test="datatime != null" >
        dataTime,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="weather != null" >
        weather,
      </if>
      <if test="winddirection != null" >
        windDirection,
      </if>
      <if test="windspeed != null" >
        windSpeed,
      </if>
      <if test="temperature != null" >
        temperature,
      </if>
      <if test="waterlevel != null" >
        waterLevel,
      </if>
      <if test="gravity != null" >
        gravity,
      </if>
      <if test="frequency != null" >
        frequency,
      </if>
      <if test="subsidencedegree != null" >
        subsidenceDegree,
      </if>
      <if test="displacementdegree != null" >
        displacementDegree,
      </if>
      <if test="tiltdegree != null" >
        tiltDegree,
      </if>
      <if test="affectresult != null" >
        affectResult,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="nodeip != null" >
        #{nodeip,jdbcType=VARCHAR},
      </if>
      <if test="datatime != null" >
        #{datatime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="weather != null" >
        #{weather,jdbcType=VARCHAR},
      </if>
      <if test="winddirection != null" >
        #{winddirection,jdbcType=INTEGER},
      </if>
      <if test="windspeed != null" >
        #{windspeed,jdbcType=VARCHAR},
      </if>
      <if test="temperature != null" >
        #{temperature,jdbcType=VARCHAR},
      </if>
      <if test="waterlevel != null" >
        #{waterlevel,jdbcType=VARCHAR},
      </if>
      <if test="gravity != null" >
        #{gravity,jdbcType=VARCHAR},
      </if>
      <if test="frequency != null" >
        #{frequency,jdbcType=VARCHAR},
      </if>
      <if test="subsidencedegree != null" >
        #{subsidencedegree,jdbcType=VARCHAR},
      </if>
      <if test="displacementdegree != null" >
        #{displacementdegree,jdbcType=VARCHAR},
      </if>
      <if test="tiltdegree != null" >
        #{tiltdegree,jdbcType=VARCHAR},
      </if>
      <if test="affectresult != null" >
        #{affectresult,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.qm.pojo.AllDataExample" resultType="java.lang.Integer" >
    select count(*) from all_data
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update all_data
    <set >
      <if test="record.nodeip != null" >
        nodeIp = #{record.nodeip,jdbcType=VARCHAR},
      </if>
      <if test="record.datatime != null" >
        dataTime = #{record.datatime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.weather != null" >
        weather = #{record.weather,jdbcType=VARCHAR},
      </if>
      <if test="record.winddirection != null" >
        windDirection = #{record.winddirection,jdbcType=INTEGER},
      </if>
      <if test="record.windspeed != null" >
        windSpeed = #{record.windspeed,jdbcType=VARCHAR},
      </if>
      <if test="record.temperature != null" >
        temperature = #{record.temperature,jdbcType=VARCHAR},
      </if>
      <if test="record.waterlevel != null" >
        waterLevel = #{record.waterlevel,jdbcType=VARCHAR},
      </if>
      <if test="record.gravity != null" >
        gravity = #{record.gravity,jdbcType=VARCHAR},
      </if>
      <if test="record.frequency != null" >
        frequency = #{record.frequency,jdbcType=VARCHAR},
      </if>
      <if test="record.subsidencedegree != null" >
        subsidenceDegree = #{record.subsidencedegree,jdbcType=VARCHAR},
      </if>
      <if test="record.displacementdegree != null" >
        displacementDegree = #{record.displacementdegree,jdbcType=VARCHAR},
      </if>
      <if test="record.tiltdegree != null" >
        tiltDegree = #{record.tiltdegree,jdbcType=VARCHAR},
      </if>
      <if test="record.affectresult != null" >
        affectResult = #{record.affectresult,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update all_data
    set nodeIp = #{record.nodeip,jdbcType=VARCHAR},
      dataTime = #{record.datatime,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=INTEGER},
      weather = #{record.weather,jdbcType=VARCHAR},
      windDirection = #{record.winddirection,jdbcType=INTEGER},
      windSpeed = #{record.windspeed,jdbcType=VARCHAR},
      temperature = #{record.temperature,jdbcType=VARCHAR},
      waterLevel = #{record.waterlevel,jdbcType=VARCHAR},
      gravity = #{record.gravity,jdbcType=VARCHAR},
      frequency = #{record.frequency,jdbcType=VARCHAR},
      subsidenceDegree = #{record.subsidencedegree,jdbcType=VARCHAR},
      displacementDegree = #{record.displacementdegree,jdbcType=VARCHAR},
      tiltDegree = #{record.tiltdegree,jdbcType=VARCHAR},
      affectResult = #{record.affectresult,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  
  <!--自定义sql语句-->
  <!--获取当天最高最低温度，最高最低风速-->
  <select id="selectTemperAndSpeed" parameterType="java.lang.String" resultType="java.util.LinkedHashMap">
    select MAX(temperature)as maxTemper,MIN(temperature)as minTemper ,MAX(windSpeed) as maxWind,MIN(windSpeed)AS minWind
    from all_data WHERE dataTime BETWEEN #{startDate,jdbcType=VARCHAR} And #{endDate,jdbcType=VARCHAR};
  </select>


</mapper>